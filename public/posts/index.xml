<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Code World</title><link>https://arnab7070.github.io/posts/</link><description>Recent content in Posts on Code World</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Dec 2022 15:24:06 +0530</lastBuildDate><atom:link href="https://arnab7070.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Python CheatSheet</title><link>https://arnab7070.github.io/posts/python-cheatsheet/</link><pubDate>Sat, 10 Dec 2022 15:24:06 +0530</pubDate><guid>https://arnab7070.github.io/posts/python-cheatsheet/</guid><description>Overview A Python cheat sheet is a quick reference guide for Python, a popular and versatile programming language. It provides a compact summary of the most frequently used features of the language, along with their syntax and examples.</description></item><item><title>Mark &amp; Toys</title><link>https://arnab7070.github.io/posts/mark-toys/</link><pubDate>Mon, 07 Nov 2022 19:19:17 +0530</pubDate><guid>https://arnab7070.github.io/posts/mark-toys/</guid><description>This question is taken from HackerRank Website. Here is the link
Problem Statement Mark and Jane are very happy after having their first child. Their son loves toys, so Mark wants to buy some.</description></item><item><title>Move to Front</title><link>https://arnab7070.github.io/posts/move-to-front/</link><pubDate>Sun, 16 Oct 2022 18:02:11 +0530</pubDate><guid>https://arnab7070.github.io/posts/move-to-front/</guid><description>Question You are given the head of a Linked List. You have to move the last element to the front of the Linked List and return the list.</description></item><item><title>Priority Queue</title><link>https://arnab7070.github.io/posts/priority-queue/</link><pubDate>Thu, 13 Oct 2022 20:14:57 +0530</pubDate><guid>https://arnab7070.github.io/posts/priority-queue/</guid><description>Question Implement the basic functions of priority queue using C language
Code /* * C Program to Implement Priority Queue to Add and Delete Elements */ #include &amp;lt;stdio.</description></item><item><title>Delete Without Head Pointer</title><link>https://arnab7070.github.io/posts/delete-without-head-pointer/</link><pubDate>Thu, 13 Oct 2022 17:42:04 +0530</pubDate><guid>https://arnab7070.github.io/posts/delete-without-head-pointer/</guid><description>Question You are given a pointer/ reference to the node which is to be deleted from the linked list of N nodes. The task is to delete the node.</description></item><item><title>Max Min</title><link>https://arnab7070.github.io/posts/max-min/</link><pubDate>Thu, 13 Oct 2022 17:10:45 +0530</pubDate><guid>https://arnab7070.github.io/posts/max-min/</guid><description>Question [Problem of the day 13-10-2022]
Given an array A of size N of integers. Your task is to find the sum of minimum and maximum element in the array.</description></item><item><title>Reverse Words in a Given String</title><link>https://arnab7070.github.io/posts/reverse-words-in-a-given-string/</link><pubDate>Wed, 12 Oct 2022 16:51:37 +0530</pubDate><guid>https://arnab7070.github.io/posts/reverse-words-in-a-given-string/</guid><description>Question Given a String S, reverse the string without reversing its individual words. Words are separated by dots.
Example Input: S = i.like.this.program.very.much
Output: much.very.program.this.like.i</description></item><item><title>Minimize the Difference</title><link>https://arnab7070.github.io/posts/minimize-the-difference/</link><pubDate>Wed, 12 Oct 2022 08:37:21 +0530</pubDate><guid>https://arnab7070.github.io/posts/minimize-the-difference/</guid><description>Problem Statement You are given an array ‘A’ of length ‘N’ consisting only of positive integers and an integer ‘K’. You have to update every element of the array by increasing or decreasing its value by ‘K’ only once.</description></item><item><title>BuildTree</title><link>https://arnab7070.github.io/posts/buildtree/</link><pubDate>Tue, 11 Oct 2022 12:10:15 +0530</pubDate><guid>https://arnab7070.github.io/posts/buildtree/</guid><description>Question Write a code to build a tree from the inorder and preorder traversal
Concepts In order to build a tree we can not only depend on the inorder.</description></item><item><title>Infix to Postfix</title><link>https://arnab7070.github.io/posts/infix-to-postfix/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://arnab7070.github.io/posts/infix-to-postfix/</guid><description>Question Convert infix expression to postfix expression using C++
Some Important Concepts Infix notation is the notation in which operators come between the required operands. Postfix notation is the type of notation in which operator comes after the operand.</description></item><item><title>Stack Using Linked List</title><link>https://arnab7070.github.io/posts/stack-using-linked-list/</link><pubDate>Mon, 03 Oct 2022 20:51:21 +0530</pubDate><guid>https://arnab7070.github.io/posts/stack-using-linked-list/</guid><description>Question Write a code to implement Stack using Linked List
Algorithm It&amp;rsquo;s so simple to implement because stack uses LIFO and thats why we use insertAtBegin function only for inserting elements.</description></item><item><title>Polynomial Addition Using Linked List</title><link>https://arnab7070.github.io/posts/polynomial-addition-by-linked-list/</link><pubDate>Mon, 03 Oct 2022 00:24:43 +0530</pubDate><guid>https://arnab7070.github.io/posts/polynomial-addition-by-linked-list/</guid><description>Add two polynomials using Linked List Algorithm Recursive Approach (Easy) If both the numbers are null then return. else if compare the power, if same then add the coefficients and recursively call</description></item><item><title>Binary Search Tree</title><link>https://arnab7070.github.io/posts/binary-search-tree/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://arnab7070.github.io/posts/binary-search-tree/</guid><description>Implementation of Binary Search Tree Question Write a menu driven program in C or C++ to perform the following operations on Binary Search Tree.
insert a node.</description></item><item><title>BFS Traversal</title><link>https://arnab7070.github.io/posts/bfs-traversal/</link><pubDate>Fri, 23 Sep 2022 20:44:48 +0530</pubDate><guid>https://arnab7070.github.io/posts/bfs-traversal/</guid><description>Code in C++ to perform BFS Code #include&amp;lt;iostream&amp;gt; #include&amp;lt;queue&amp;gt; #include&amp;lt;algorithm&amp;gt; using namespace std; int main(){ queue&amp;lt;int&amp;gt; q; int u; int i = 0; //here we are starting exploration from 0.</description></item><item><title>Menu Driven Program For Doubly Linked List</title><link>https://arnab7070.github.io/posts/doubly-linked-list/</link><pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate><guid>https://arnab7070.github.io/posts/doubly-linked-list/</guid><description>Question Write a menu driven program in C++ to perform the following operations on double linked list.
insert a node at the beginning of the list.</description></item><item><title>Matrix Problems in Python</title><link>https://arnab7070.github.io/posts/matrix-problem-in-python/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://arnab7070.github.io/posts/matrix-problem-in-python/</guid><description>Questions 1. Write a python program to create an 3X3 Matrix randomly and calculate sum of the diagonal elements. Code import random matrix = [[],[],[]] sum1 = 0 for i in range (3): for j in range (3): matrix[i].</description></item><item><title>Frequency Of Elements</title><link>https://arnab7070.github.io/posts/frequency-of-elements/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://arnab7070.github.io/posts/frequency-of-elements/</guid><description>Question Q. Program to find the frequency of each element of an array.
Algorithm Step 1: Create a map of integer to store key-value pairs. map&amp;lt;int,int&amp;gt;.</description></item></channel></rss>